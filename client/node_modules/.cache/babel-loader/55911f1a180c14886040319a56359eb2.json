{"ast":null,"code":"var _jsxFileName = \"/home/diode/webTech/react-learn/clothing/src/components/sign-up/sign-up.com.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.com\";\nimport \"./sign-up.sty.scss\";\nimport CustomButton from \"../custom-button/custom-button.com\";\nimport { signUpStart, emailSignInStart, signUpSucess } from \"../../redux/user/user.actions\";\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n\n    this.handleSubmit = async event => {\n      const {\n        signUpStart\n      } = this.props;\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"passowrd dont match\");\n        return;\n      }\n\n      await signUpStart();\n    };\n\n    this.onChange = ({\n      target\n    }) => {\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"SIGNUP\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Sign up by providing the following details\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"displayName\",\n      type: \"text\",\n      value: this.state.displayName,\n      required: true,\n      handleChange: this.onChange,\n      label: \"Display Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      required: true,\n      handleChange: this.onChange,\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      required: true,\n      handleChange: this.onChange,\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      value: this.state.confirmPassword,\n      required: true,\n      handleChange: this.onChange,\n      label: \"Confirm Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      value: \"Signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default SignUp;","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/components/sign-up/sign-up.com.jsx"],"names":["React","Component","connect","FormInput","CustomButton","signUpStart","emailSignInStart","signUpSucess","SignUp","state","displayName","email","password","confirmPassword","handleSubmit","event","props","preventDefault","alert","onChange","target","name","value","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.com\";\nimport \"./sign-up.sty.scss\";\nimport CustomButton from \"../custom-button/custom-button.com\";\n\nimport {\n  signUpStart,\n  emailSignInStart,\n  signUpSucess,\n} from \"../../redux/user/user.actions\";\nclass SignUp extends Component {\n  state = { displayName: \"\", email: \"\", password: \"\", confirmPassword: \"\" };\n\n  handleSubmit = async (event) => {\n    const { signUpStart } = this.props;\n    event.preventDefault();\n\n    const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"passowrd dont match\");\n      return;\n    }\n\n    await signUpStart();\n  };\n\n  onChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-up\">\n        <h1>SIGNUP</h1>\n        <span>Sign up by providing the following details</span>\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"displayName\"\n            type=\"text\"\n            value={this.state.displayName}\n            required\n            handleChange={this.onChange}\n            label=\"Display Name\"\n          />\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            value={this.state.email}\n            required\n            handleChange={this.onChange}\n            label=\"Email\"\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            required\n            handleChange={this.onChange}\n            label=\"Password\"\n          />\n          <FormInput\n            name=\"confirmPassword\"\n            type=\"password\"\n            value={this.state.confirmPassword}\n            required\n            handleChange={this.onChange}\n            label=\"Confirm Password\"\n          />\n          <CustomButton type=\"submit\" value=\"Signup\">\n            Sign Up\n          </CustomButton>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (email, password, displayName) =>\n    dispatch(signUpStart({ email, password, displayName })),\n});\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}