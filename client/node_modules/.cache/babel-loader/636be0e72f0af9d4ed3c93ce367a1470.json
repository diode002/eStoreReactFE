{"ast":null,"code":"import { firestore } from \"./firebase.utils\";\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const userSnap = await userRef.get();\n\n  if (!userSnap.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating the user:\\n\", error);\n    }\n  }\n\n  return userRef;\n};\nexport const convertCollectionsSnapshotToMap = collection => {\n  const transformedCollection = collection.docs.map(doc => {\n    const {\n      items,\n      title\n    } = doc.data();\n    return {};\n  });\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/utils/firebase/firestore.utils.js"],"names":["firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","userSnap","get","exists","displayName","email","createdAt","Date","set","error","console","log","convertCollectionsSnapshotToMap","collection","transformedCollection","docs","map","items","title","data","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit"],"mappings":"AAAA,SAASA,SAAT,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,KAA1C;AACD;AACF;;AACD,SAAOX,OAAP;AACD,CAtBM;AAwBP,OAAO,MAAMc,+BAA+B,GAAGC,UAAU,IAAI;AAC3D,QAAMC,qBAAqB,GAAGD,UAAU,CAACE,IAAX,CAAgBC,GAAhB,CAAoBjB,GAAG,IAAI;AACvD,UAAM;AAAEkB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBnB,GAAG,CAACoB,IAAJ,EAAzB;AAEA,WAAO,EAAP;AACD,GAJ6B,CAA9B;AAKD,CANM;AAQP,OAAO,MAAMC,yBAAyB,GAAG,OACvCC,aADuC,EAEvCC,YAFuC,KAGpC;AACH,QAAMC,aAAa,GAAG7B,SAAS,CAACmB,UAAV,CAAqBQ,aAArB,CAAtB;AAEA,QAAMG,KAAK,GAAG9B,SAAS,CAAC8B,KAAV,EAAd;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAqBC,GAAG,IAAI;AAC1B,UAAMC,SAAS,GAAGJ,aAAa,CAACxB,GAAd,EAAlB;AACAyB,IAAAA,KAAK,CAAChB,GAAN,CAAUmB,SAAV,EAAqBD,GAArB;AACD,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACD,CAbM","sourcesContent":["import { firestore } from \"./firebase.utils\";\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const userSnap = await userRef.get();\n\n  if (!userSnap.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating the user:\\n\", error);\n    }\n  }\n  return userRef;\n};\n\nexport const convertCollectionsSnapshotToMap = collection => {\n  const transformedCollection = collection.docs.map(doc => {\n    const { items, title } = doc.data();\n\n    return {};\n  });\n};\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n"]},"metadata":{},"sourceType":"module"}