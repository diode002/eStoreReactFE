{"ast":null,"code":"var _jsxFileName = \"/home/diode/webTech/react-learn/clothing/src/pages/shop/shopage.com.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateColection } from \"../../redux/shop/shop.actions\";\nimport CollectionOverview from \"../../components/collectionOverview/collection-overview.com\";\nimport CollectionPage from \"../collection/collection.com\";\nimport { firestore } from \"../../utils/firebase/firebase.utils\";\nimport { convertCollectionsSnapshotToMap } from \"../../utils/firebase/firestore.utils\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.com\";\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribefromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateColection\n    } = this.props;\n    const collectionRef = firestore.collection(\"collection\");\n    this.unsubscribefromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateColection(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match: {\n        path\n      }\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${path}`,\n      render: () => React.createElement(CollectionOverViewWithSpinner, {\n        isLoading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${path}/:collectionID`,\n      render: () => React.createElement(CollectionPageWithSpinner, {\n        isLoading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchtoProps = dispatch => ({\n  updateColection: collectionsMap => dispatch(updateColection(collectionsMap))\n});\n\nexport default connect(null, mapDispatchtoProps)(ShopPage);","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/pages/shop/shopage.com.jsx"],"names":["React","Component","Route","connect","updateColection","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionOverViewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unsubscribefromSnapShot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchtoProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,kBAAP,MAA+B,6DAA/B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,+BAAT,QAAgD,sCAAhD;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACJ,kBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BY,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE;AADH,KADuB;AAAA,SAK/BC,uBAL+B,GAKL,IALK;AAAA;;AAM/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEZ,MAAAA;AAAF,QAAsB,KAAKa,KAAjC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,YAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxE,YAAMC,aAAa,GAAGd,+BAA+B,CAACa,QAAD,CAArD;AACAjB,MAAAA,eAAe,CAACkB,aAAD,CAAf;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJ8B,CAA/B;AAKD;;AACDU,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AADH,QAEF,KAAKT,KAFT;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAES,IAAK,EAFhB;AAGE,MAAA,MAAM,EAAE,MACN,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEY,IAAK,gBADhB;AAEE,MAAA,MAAM,EAAE,MAAM,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEZ,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAeD;;AAnC8B;;AAsCjC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA,eAAe,EAAEyB,cAAc,IAAID,QAAQ,CAACxB,eAAe,CAACyB,cAAD,CAAhB;AADL,CAAL,CAAnC;;AAIA,eAAe1B,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { updateColection } from \"../../redux/shop/shop.actions\";\nimport CollectionOverview from \"../../components/collectionOverview/collection-overview.com\";\nimport CollectionPage from \"../collection/collection.com\";\nimport { firestore } from \"../../utils/firebase/firebase.utils\";\nimport { convertCollectionsSnapshotToMap } from \"../../utils/firebase/firestore.utils\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.com\";\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  state = {\n    loading: true\n  };\n\n  unsubscribefromSnapShot = null;\n  componentDidMount() {\n    const { updateColection } = this.props;\n    const collectionRef = firestore.collection(\"collection\");\n\n    this.unsubscribefromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateColection(collectionMap);\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    const {\n      match: { path }\n    } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${path}`}\n          render={() => (\n            <CollectionOverViewWithSpinner isLoading={this.state.loading} />\n          )}\n        />\n        <Route\n          path={`${path}/:collectionID`}\n          render={() => <CollectionPageWithSpinner isLoading={loading} />}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchtoProps = dispatch => ({\n  updateColection: collectionsMap => dispatch(updateColection(collectionsMap))\n});\n\nexport default connect(null, mapDispatchtoProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}