{"ast":null,"code":"var _jsxFileName = \"/home/diode/webTech/react-learn/clothing/src/components/sign-in/sign-in.com.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.com\";\nimport \"./sign-in.sty.scss\";\nimport CustomButton from \"../custom-button/custom-button.com\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nfunction SignIn({\n  emailSignInStart\n}) {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n    emailSignInStart(email, password);\n  };\n\n  const onChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"SIGNIN\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: this.state.email,\n    required: true,\n    handleChange: this.onChange,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: this.state.password,\n    required: true,\n    handleChange: this.onChange,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    value: \"Signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sign in With Google\")));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/components/sign-in/sign-in.com.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","onChange","target","name","value","props","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.com\";\nimport \"./sign-in.sty.scss\";\nimport CustomButton from \"../custom-button/custom-button.com\";\n\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\n\nfunction SignIn({ emailSignInStart }) {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { email, password } = userCredentials;\n    emailSignInStart(email, password);\n  };\n\n  const onChange = ({ target }) => {\n    const { name, value } = target;\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  const { googleSignInStart } = this.props;\n\n  return (\n    <div className=\"sign-in\">\n      <h1>SIGNIN</h1>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={this.handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={this.state.email}\n          required\n          handleChange={this.onChange}\n          label=\"Email\"\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={this.state.password}\n          required\n          handleChange={this.onChange}\n          label=\"Password\"\n        />\n        <CustomButton type=\"submit\" value=\"Signin\">\n          Sign in\n        </CustomButton>\n        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n          Sign in With Google\n        </CustomButton>\n      </form>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}