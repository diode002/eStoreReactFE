{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, getCurrentUser } from \"../../utils/firebase/firebase.utils\";\nimport { createUserProfileDocument } from \"../../utils/firebase/firestore.utils\";\nimport { signInFailure, signInSuccess, signOutSucess, signOutFailure, signUpFailure, signUpSucess } from \"./user.actions\";\nexport function* getSnapShotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    console.log(userSnapShot);\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signinWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSucess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSucess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signinWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","getCurrentUser","createUserProfileDocument","signInFailure","signInSuccess","signOutSucess","signOutFailure","signUpFailure","signUpSucess","getSnapShotFromUserAuth","user","userRef","userSnapShot","get","console","log","id","data","error","message","signInWithGoogle","signInWithPopup","signinWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","userAuth","signUp","displayName","createUserWithEmailAndPassword","additionalData","signOut","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  auth,\n  googleProvider,\n  getCurrentUser,\n} from \"../../utils/firebase/firebase.utils\";\nimport { createUserProfileDocument } from \"../../utils/firebase/firestore.utils\";\n\nimport {\n  signInFailure,\n  signInSuccess,\n  signOutSucess,\n  signOutFailure,\n  signUpFailure,\n  signUpSucess,\n} from \"./user.actions\";\n\nexport function* getSnapShotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n\n    console.log(userSnapShot);\n\n    yield put(signInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* signinWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSucess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSucess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signinWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}