{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDODRhCEMMmu3hZzfWrkiZPQaKuBxVjsjM\",\n  authDomain: \"estore-002.firebaseapp.com\",\n  databaseURL: \"https://estore-002.firebaseio.com\",\n  projectId: \"estore-002\",\n  storageBucket: \"estore-002.appspot.com\",\n  messagingSenderId: \"757875952831\",\n  appId: \"1:757875952831:web:12f4e79d044d3934df0a0a\",\n  measurementId: \"G-NDTYB2TYW8\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  login_hint: \"user@example.com\",\n  prompt: \"select_account\"\n});\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const signinWithGoogle = () => {\n  firebase.auth().signInWithPopup(googleProvider).then(function (result) {// This gives you a Google Access Token. You can use it to access the Google API.\n    // var token = result.credential.accessToken;\n    // The signed-in user info.\n    // var user = result.user;\n    // ...\n  }).catch(function (error) {// Handle Errors here.\n    // var errorCode = error.code;\n    // var errorMessage = error.message;\n    // The email of the user's account used.\n    // var email = error.email;\n    // The firebase.auth.AuthCredential type that was used.\n    // var credential = error.credential;\n    // ...\n  });\n};\nexport default firebase;","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/client/src/utils/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","googleProvider","GoogleAuthProvider","setCustomParameters","login_hint","prompt","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged","userAuth","signinWithGoogle","signInWithPopup","then","result","catch","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,4BAFS;AAGrBC,EAAAA,WAAW,EAAE,mCAHQ;AAIrBC,EAAAA,SAAS,EAAE,YAJU;AAKrBC,EAAAA,aAAa,EAAE,wBALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAUAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,OAAO,MAAMC,cAAc,GAAG,IAAIb,QAAQ,CAACW,IAAT,CAAcG,kBAAlB,EAAvB;AACPD,cAAc,CAACE,mBAAf,CAAmC;AACjCC,EAAAA,UAAU,EAAE,kBADqB;AAEjCC,EAAAA,MAAM,EAAE;AAFyB,CAAnC;AAKA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,WAAW,GAAGX,IAAI,CAACY,kBAAL,CAAyBC,QAAD,IAAc;AACxDF,MAAAA,WAAW;AACXF,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAHmB,EAGjBH,MAHiB,CAApB;AAID,GALM,CAAP;AAMD,CAPM;AASP,OAAO,MAAMI,gBAAgB,GAAG,MAAM;AACpCzB,EAAAA,QAAQ,CACLW,IADH,GAEGe,eAFH,CAEmBb,cAFnB,EAGGc,IAHH,CAGQ,UAAUC,MAAV,EAAkB,CACtB;AACA;AACA;AACA;AACA;AACD,GATH,EAUGC,KAVH,CAUS,UAAUC,KAAV,EAAiB,CACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAnBH;AAoBD,CArBM;AAsBP,eAAe9B,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDODRhCEMMmu3hZzfWrkiZPQaKuBxVjsjM\",\n  authDomain: \"estore-002.firebaseapp.com\",\n  databaseURL: \"https://estore-002.firebaseio.com\",\n  projectId: \"estore-002\",\n  storageBucket: \"estore-002.appspot.com\",\n  messagingSenderId: \"757875952831\",\n  appId: \"1:757875952831:web:12f4e79d044d3934df0a0a\",\n  measurementId: \"G-NDTYB2TYW8\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  login_hint: \"user@example.com\",\n  prompt: \"select_account\",\n});\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const signinWithGoogle = () => {\n  firebase\n    .auth()\n    .signInWithPopup(googleProvider)\n    .then(function (result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // var token = result.credential.accessToken;\n      // The signed-in user info.\n      // var user = result.user;\n      // ...\n    })\n    .catch(function (error) {\n      // Handle Errors here.\n      // var errorCode = error.code;\n      // var errorMessage = error.message;\n      // The email of the user's account used.\n      // var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      // var credential = error.credential;\n      // ...\n    });\n};\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}