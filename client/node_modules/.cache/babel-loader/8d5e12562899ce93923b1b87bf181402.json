{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore } from \"../../utils/firebase/firebase.utils\";\nimport { convertCollectionsSnapshotToMap } from \"../../utils/firebase/firestore.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collection\");\n    dispatch(fetchCollectionsStart);\n    collectionRef.get().then(onSnapshot(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot); // updateColection(collectionMap);\n\n      this.setState({\n        loading: false\n      });\n    }));\n  };\n};","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","onSnapshot","snapshot","collectionMap","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,+BAAT,QAAgD,sCAAhD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACJ,qBAAD,CAAR;AAEAK,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CACEC,UAAU,CAAEC,QAAD,IAAc;AACvB,YAAMC,aAAa,GAAGZ,+BAA+B,CAACW,QAAD,CAArD,CADuB,CAEvB;;AAEA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KALS,CADZ;AAQD,GAZD;AAaD,CAdM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport { firestore } from \"../../utils/firebase/firebase.utils\";\nimport { convertCollectionsSnapshotToMap } from \"../../utils/firebase/firestore.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collection\");\n    dispatch(fetchCollectionsStart);\n\n    collectionRef.get().then(\n      onSnapshot((snapshot) => {\n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n        // updateColection(collectionMap);\n\n        this.setState({ loading: false });\n      })\n    );\n  };\n};\n"]},"metadata":{},"sourceType":"module"}