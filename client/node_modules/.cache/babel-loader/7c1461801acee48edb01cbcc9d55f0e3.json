{"ast":null,"code":"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar customInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : null;\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nvar K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\n\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1);\n    var proto = {\n      foo: function () {\n        return 42;\n      }\n    };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\n\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  } // Return an augmented `Uint8Array` instance\n\n\n  var buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n\n    return allocUnsafe(arg);\n  }\n\n  return from(arg, encodingOrOffset, length);\n} // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\n\nif (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  });\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value);\n  }\n\n  if (value == null) {\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n\n  var valueOf = value.valueOf && value.valueOf();\n\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n\n  var b = fromObject(value);\n  if (b) return b;\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n}; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\n\n\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\n\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n\n  return createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\n\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\n\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  var buf = createBuffer(length);\n  var actual = buf.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n\n  return buf;\n}\n\nfunction fromArrayLike(array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  var buf = createBuffer(length);\n\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n\n  return buf;\n}\n\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n\n  var buf;\n\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  } // Return an augmented `Uint8Array` instance\n\n\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    var buf = createBuffer(len);\n\n    if (buf.length === 0) {\n      return buf;\n    }\n\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\n\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf);\n    }\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n  }\n\n  var len = string.length;\n  var mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\n\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  var strLen = string.length;\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    var len = bytes.length;\n\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n  str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n} // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\n\n\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\n\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n} // Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\n\n\nvar hexSliceLookupTable = function () {\n  var alphabet = '0123456789abcdef';\n  var table = new Array(256);\n\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16;\n\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n\n  return table;\n}();","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/node_modules/buffer/index.js"],"names":["base64","require","ieee754","customInspectSymbol","Symbol","for","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","arr","Uint8Array","proto","foo","Object","setPrototypeOf","prototype","e","defineProperty","enumerable","get","isBuffer","undefined","buffer","byteOffset","createBuffer","length","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","species","value","configurable","writable","poolSize","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","byteLength","actual","write","slice","array","i","obj","len","copy","numberIsNaN","type","Array","isArray","data","toString","_isBuffer","compare","a","offset","x","y","Math","min","String","toLowerCase","concat","list","pos","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","Error","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","code","charCodeAt","INVALID_BASE64_RE","base64clean","split","units","Infinity","leadSurrogate","byteArray","c","hi","lo","toByteArray","src","dst","constructor","name","alphabet","table","i16"],"mappings":"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","sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n"]},"metadata":{},"sourceType":"script"}