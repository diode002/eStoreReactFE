{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { fetchCollectionsSucess, fetchCollectionsFailure } from \"./shop.actions\";\nimport { firestore } from \"../../utils/firebase/firebase.utils\";\nimport { convertCollectionsSnapshotToMap } from \"../../utils/firebase/firestore.utils\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchColectionAsync() {\n  const collectionRef = firestore.collection(\"collection\");\n\n  try {\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSucess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  //     console.log(collectionMap);\n  //     dispatch(fetchCollectionsSucess(collectionMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchColectionAsync);\n}","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","fetchCollectionsSucess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchColectionAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SACEC,sBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,+BAAT,QAAgD,sCAAhD;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,YAArB,CAAtB;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMZ,IAAI,CAACK,+BAAD,EAAkCK,QAAlC,CAAhC;AACA,UAAMT,GAAG,CAACC,sBAAsB,CAACU,aAAD,CAAvB,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACE,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD,GAToC,CAWrC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CAACO,eAAe,CAACU,uBAAjB,EAA0CT,mBAA1C,CAAf;AACD","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\n\nimport {\n  fetchCollectionsSucess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\n\nimport { firestore } from \"../../utils/firebase/firebase.utils\";\nimport { convertCollectionsSnapshotToMap } from \"../../utils/firebase/firestore.utils\";\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchColectionAsync() {\n  const collectionRef = firestore.collection(\"collection\");\n\n  try {\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSucess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n\n  // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  //     console.log(collectionMap);\n\n  //     dispatch(fetchCollectionsSucess(collectionMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchColectionAsync);\n}\n"]},"metadata":{},"sourceType":"module"}