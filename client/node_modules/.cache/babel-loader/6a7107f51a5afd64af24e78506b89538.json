{"ast":null,"code":"var _jsxFileName = \"/home/diode/webTech/react-learn/clothing/src/pages/shop/shopage.com.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionsFetching, selectIsCollectionLoaded } from \"../../redux/shop/shop.selectors\";\nimport CollectionOverview from \"../../components/collectionOverview/collection-overview.com\";\nimport CollectionPage from \"../collection/collection.com\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.com\";\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribefromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsFetching,\n      isCollectionLoaded\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverViewWithSpinner, Object.assign({\n        isLoading: isCollectionsFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionID`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectIsCollectionsFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(ShopPage);","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/pages/shop/shopage.com.jsx"],"names":["React","Component","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionsFetching","selectIsCollectionLoaded","CollectionOverview","CollectionPage","WithSpinner","CollectionOverViewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unsubscribefromSnapShot","componentDidMount","props","render","match","isCollectionsFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchtoProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACEC,2BADF,EAEEC,wBAFF,QAGO,iCAHP;AAKA,OAAOC,kBAAP,MAA+B,6DAA/B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACF,kBAAD,CAAjD;AACA,MAAMI,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBZ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/Ba,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE;AADH,KADuB;AAAA,SAK/BC,uBAL+B,GAKL,IALK;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEZ,MAAAA;AAAF,QAAiC,KAAKa,KAA5C;AACAb,IAAAA,0BAA0B;AAC3B;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,qBAAT;AAAgCC,MAAAA;AAAhC,QAAuD,KAAKJ,KAAlE;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGL,KAAD,IACN,oBAAC,6BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGL,KAAD,IACN,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAE,CAACI;AADd,SAEMJ,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD;;AArC8B;;AAwCjC,MAAMM,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CiB,EAAAA,qBAAqB,EAAEf,2BADwB;AAE/CgB,EAAAA,kBAAkB,EAAEf;AAF2B,CAAD,CAAhD;;AAKA,MAAMkB,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,0BAA0B,EAAE,MAAMqB,QAAQ,CAACrB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { createStructuredSelector } from \"reselect\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport {\n  selectIsCollectionsFetching,\n  selectIsCollectionLoaded,\n} from \"../../redux/shop/shop.selectors\";\n\nimport CollectionOverview from \"../../components/collectionOverview/collection-overview.com\";\nimport CollectionPage from \"../collection/collection.com\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.com\";\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  state = {\n    loading: true,\n  };\n\n  unsubscribefromSnapShot = null;\n\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, isCollectionsFetching, isCollectionLoaded } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionOverViewWithSpinner\n              isLoading={isCollectionsFetching}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionID`}\n          render={(props) => (\n            <CollectionPageWithSpinner\n              isLoading={!isCollectionLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectIsCollectionsFetching,\n  isCollectionLoaded: selectIsCollectionLoaded,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}