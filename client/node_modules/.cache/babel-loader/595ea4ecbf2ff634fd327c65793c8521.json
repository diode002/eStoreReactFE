{"ast":null,"code":"var _jsxFileName = \"/home/diode/webTech/react-learn/clothing/src/pages/shop/shopage.com.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateColection } from \"../../redux/shop/shop.actions\";\nimport CollectionOverview from \"../../components/collectionOverview/collection-overview.com\";\nimport CollectionPage from \"../collection/collection.com\";\nimport { firestore } from \"../../utils/firebase/firebase.utils\";\nimport { convertCollectionsSnapshotToMap } from \"../../utils/firebase/firestore.utils\";\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribefromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collection\");\n    collectionRef.onSnapshot(async snapshot => {\n      console.log(convertCollectionsSnapshotToMap(snapshot));\n    });\n  }\n\n  render() {\n    const {\n      match: {\n        path\n      }\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${path}`,\n      component: CollectionOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${path}/:collectionID`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchtoProps = dispatch => ({\n  updateColection: collectionsMap => dispatch(updateColection(collections))\n});\n\nexport default connect()(ShopPage);","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/pages/shop/shopage.com.jsx"],"names":["React","Component","Route","connect","updateColection","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","unsubscribefromSnapShot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","console","log","render","match","path","props","mapDispatchtoProps","dispatch","collectionsMap","collections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,kBAAP,MAA+B,6DAA/B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,+BAAT,QAAgD,sCAAhD;;AACA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BS,uBAD+B,GACL,IADK;AAAA;;AAE/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,YAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYT,+BAA+B,CAACO,QAAD,CAA3C;AACD,KAFD;AAGD;;AACDG,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AADH,QAEF,KAAKC,KAFT;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,IAAK,EAA3B;AAA8B,MAAA,SAAS,EAAEf,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,IAAK,gBAArB;AAAsC,MAAA,SAAS,EAAEd,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAnB8B;;AAsBjC,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,eAAe,EAAEoB,cAAc,IAAID,QAAQ,CAACnB,eAAe,CAACqB,WAAD,CAAhB;AADL,CAAL,CAAnC;;AAIA,eAAetB,OAAO,GAAGM,QAAH,CAAtB","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { updateColection } from \"../../redux/shop/shop.actions\";\nimport CollectionOverview from \"../../components/collectionOverview/collection-overview.com\";\nimport CollectionPage from \"../collection/collection.com\";\nimport { firestore } from \"../../utils/firebase/firebase.utils\";\nimport { convertCollectionsSnapshotToMap } from \"../../utils/firebase/firestore.utils\";\nclass ShopPage extends Component {\n  unsubscribefromSnapShot = null;\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collection\");\n\n    collectionRef.onSnapshot(async snapshot => {\n      console.log(convertCollectionsSnapshotToMap(snapshot));\n    });\n  }\n  render() {\n    const {\n      match: { path }\n    } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${path}`} component={CollectionOverview} />\n        <Route path={`${path}/:collectionID`} component={CollectionPage} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchtoProps = dispatch => ({\n  updateColection: collectionsMap => dispatch(updateColection(collections))\n});\n\nexport default connect()(ShopPage);\n"]},"metadata":{},"sourceType":"module"}