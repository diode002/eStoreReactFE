{"ast":null,"code":"var _jsxFileName = \"/home/diode/webTech/react-learn/clothing/src/components/sign-up/sign-up.com.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.com\";\nimport \"./sign-up.sty.scss\";\nimport CustomButton from \"../custom-button/custom-button.com\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nfunction SignUp({\n  signUpStart\n}) {\n  const [userCredentials, setUserCredetials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"passowrd dont match\");\n      return;\n    }\n\n    await signUpStart(email, password, displayName);\n  };\n\n  const onChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"SIGNUP\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Sign up by providing the following details\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    value: displayName,\n    required: true,\n    handleChange: onChange,\n    label: \"Display Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    handleChange: onChange,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    handleChange: onChange,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: confirmPassword,\n    required: true,\n    handleChange: onChange,\n    label: \"Confirm Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    value: \"Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Sign Up\")));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/diode/webTech/react-learn/clothing/src/components/sign-up/sign-up.com.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setUserCredetials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","state","alert","onChange","target","name","value","setState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.com\";\nimport \"./sign-up.sty.scss\";\nimport CustomButton from \"../custom-button/custom-button.com\";\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\nfunction SignUp({ signUpStart }) {\n  const [userCredentials, setUserCredetials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"passowrd dont match\");\n      return;\n    }\n\n    await signUpStart(email, password, displayName);\n  };\n\n  const onChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h1>SIGNUP</h1>\n      <span>Sign up by providing the following details</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"displayName\"\n          type=\"text\"\n          value={displayName}\n          required\n          handleChange={onChange}\n          label=\"Display Name\"\n        />\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          required\n          handleChange={onChange}\n          label=\"Email\"\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          required\n          handleChange={onChange}\n          label=\"Password\"\n        />\n        <FormInput\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={confirmPassword}\n          required\n          handleChange={onChange}\n          label=\"Confirm Password\"\n        />\n        <CustomButton type=\"submit\" value=\"Signup\">\n          Sign Up\n        </CustomButton>\n      </form>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (email, password, displayName) =>\n    dispatch(signUpStart({ email, password, displayName })),\n});\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}